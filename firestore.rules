rules_version = '2';
service cloud.firestore {

	match /databases/{database}/documents {

    function getRole(role){
      return request.auth != null && (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role)
    }
    
    match /app/settings {
    	allow write: if getRole("RESTAURANT")
      allow read: if true
    }
    match /app/hiddenSettings {
    	allow write: if false
      allow read: if false
    }
    match /app/restaurantSettings {
      allow write: if getRole("RESTAURANT");
      allow read: if getRole("RESTAURANT");
    }
    match /templates/{template} {
    	allow write: if getRole("RESTAURANT")
      allow read: if true
    }
    match /menus/{menu} {	  
      function valid_create() {
      	return request.resource.data.keys().hasAll(['date', 'dishes']);
      }
      function valid_update(){
      	return request.resource.data.date == resource.data.date || (valid_create() && !(resource.data.keys().hasAll(["dishes", "date"])))
      }
      
    	allow create: if (getRole("RESTAURANT") && valid_create());
      allow delete: if false;
      allow update: if (getRole("RESTAURANT") && valid_update());
      allow read: if request.auth != null;
      
      match /orders/{userId} {
      	allow write, read: if request.auth.uid == userId
      }
    }
    match /users/{user} {
    	allow read, write: if getRole("ADMIN");
    }
    match /users/{userId} {
    	allow read, update, delete: if (getRole("ADMIN") || request.auth.uid == userId);
      allow create: if getRole("ADMIN");
    }
  }
}